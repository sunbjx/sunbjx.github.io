<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>北极熊</title>
  
  <subtitle>阳光下的北极熊</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sunbjx.com/"/>
  <updated>2017-09-13T18:37:00.000Z</updated>
  <id>https://sunbjx.com/</id>
  
  <author>
    <name>sunbjx</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在CentOS7上部署kubernetes1.7 HA 集群(Vagrant)</title>
    <link href="https://sunbjx.com/2017/09/13/%E5%9C%A8CentOS7%E4%B8%8A%E9%83%A8%E7%BD%B2kubernetes1-7-HA-%E9%9B%86%E7%BE%A4-Vagrant/"/>
    <id>https://sunbjx.com/2017/09/13/在CentOS7上部署kubernetes1-7-HA-集群-Vagrant/</id>
    <published>2017-09-13T09:43:47.000Z</published>
    <updated>2017-09-13T18:37:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用virtualbox-vagrant安装centos7"><a href="#使用virtualbox-vagrant安装centos7" class="headerlink" title="使用virtualbox + vagrant安装centos7"></a><font color="red">使用virtualbox + vagrant安装centos7</font></h3><h4 id="vagrant准本工作"><a href="#vagrant准本工作" class="headerlink" title="vagrant准本工作"></a>vagrant准本工作</h4><p>1、具体安装和使用<code>virtualbox</code> &amp;&amp; <code>vagrant</code>请自行Google</p><p>2、搜索centos7 box:<br><a href="https://app.vagrantup.com/boxes/search?provider=virtualbox" title="Discover Vagrant Boxes" target="_blank" rel="external">https://app.vagrantup.com/boxes/search?provider=virtualbox</a></p><p>3、生成Vagrantfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir -p ~/Vagrant/k8s-cluster</div><div class="line">cd ~/Vagrant/k8s-cluster</div><div class="line">vagrant init centos/7</div></pre></td></tr></table></figure><h4 id="安装centos7"><a href="#安装centos7" class="headerlink" title="安装centos7"></a>安装centos7</h4><p>1、编辑Vagrantfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd ~/Vagrant/k8s-cluster</div><div class="line">cp Vagrantfile ./Vagrantfile_backup</div><div class="line">emacs Vagrantfile</div></pre></td></tr></table></figure><p>Vagrantfile 内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"># coding: utf-8</div><div class="line">Vagrant.configure(&quot;2&quot;) do |config|</div><div class="line"></div><div class="line">    (11..13).each do |i|</div><div class="line">        </div><div class="line">        config.vm.define &quot;k8s-master#&#123;i&#125;&quot; do |node|</div><div class="line"></div><div class="line">        # 设置虚拟机的Box</div><div class="line">        node.vm.box = &quot;centos/7&quot;</div><div class="line"></div><div class="line">        # 设置虚拟机的主机名</div><div class="line">        node.vm.hostname=&quot;master#&#123;i&#125;&quot;</div><div class="line"></div><div class="line">        # 设置虚拟机的IP</div><div class="line">        node.vm.network &quot;public_network&quot;, ip: &quot;192.168.7.#&#123;i&#125;&quot;, :bridge=&gt;&apos;en0: Wi-Fi (AirPort)&apos;</div><div class="line">node.vm.boot_timeout = 20</div><div class="line"></div><div class="line">        # 设置主机与虚拟机的共享目录</div><div class="line">        node.vm.synced_folder &quot;/Users/sunbjx/Vagrant/share&quot;, &quot;/home/vagrant/share&quot;</div><div class="line"></div><div class="line">        # VirtaulBox相关配置</div><div class="line">        node.vm.provider &quot;virtualbox&quot; do |v|</div><div class="line"></div><div class="line">            # 设置虚拟机的名称</div><div class="line">            v.name = &quot;k8s-master#&#123;i&#125;&quot;</div><div class="line"></div><div class="line">            # 设置虚拟机的内存大小</div><div class="line">            v.memory = 4096</div><div class="line"></div><div class="line">            # 设置虚拟机的CPU个数</div><div class="line">            v.cpus = 2</div><div class="line">        end</div><div class="line"></div><div class="line">        # 使用shell脚本进行软件安装和配置</div><div class="line">        node.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL</div><div class="line">        sudo yum -y update</div><div class="line">            sudo yum -y install net-tools</div><div class="line">            sudo yum -y install vim</div><div class="line">        SHELL</div><div class="line">        end</div><div class="line">    end     </div><div class="line">  </div><div class="line">    (14..15).each do |i|</div><div class="line"></div><div class="line">        config.vm.define &quot;k8s-node#&#123;i&#125;&quot; do |node|</div><div class="line"></div><div class="line">        # 设置虚拟机的Box</div><div class="line">        node.vm.box = &quot;centos/7&quot;</div><div class="line"></div><div class="line">        # 设置虚拟机的主机名</div><div class="line">        node.vm.hostname=&quot;node#&#123;i&#125;&quot;</div><div class="line"></div><div class="line">        # 设置虚拟机的IP</div><div class="line">        node.vm.network &quot;public_network&quot;, ip: &quot;192.168.7.#&#123;i&#125;&quot;, :bridge=&gt;&apos;en0: Wi-Fi (AirPort)&apos;</div><div class="line">node.vm.boot_timeout = 20</div><div class="line"></div><div class="line">        # 设置主机与虚拟机的共享目录</div><div class="line">        node.vm.synced_folder &quot;/Users/sunbjx/Vagrant/share&quot;, &quot;/home/vagrant/share&quot;</div><div class="line"></div><div class="line">        # VirtaulBox相关配置</div><div class="line">        node.vm.provider &quot;virtualbox&quot; do |v|</div><div class="line"></div><div class="line">            # 设置虚拟机的名称</div><div class="line">            v.name = &quot;k8s-node#&#123;i&#125;&quot;</div><div class="line"></div><div class="line">            # 设置虚拟机的内存大小  </div><div class="line">            v.memory = 8192</div><div class="line"></div><div class="line">            # 设置虚拟机的CPU个数</div><div class="line">            v.cpus = 2</div><div class="line">        end</div><div class="line"></div><div class="line">        # 使用shell脚本进行软件安装和配置</div><div class="line">        node.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL</div><div class="line">sudo yum -y update</div><div class="line">            sudo yum -y install net-tools</div><div class="line">            sudo yum -y install vim      </div><div class="line">        SHELL</div><div class="line">        end</div><div class="line">    end</div><div class="line">end</div></pre></td></tr></table></figure><p>2、启动安装centos7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vagrant up</div></pre></td></tr></table></figure><h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a><font color="red">环境说明</font></h3><p>环境总共 5 台虚拟机，3 个 master，3 个 etcd 节点，2 个 node</p><font color="blue">网络方案这里采用<code>flannel</code>，集群开启 <code>RBAC</code></font><table><thead><tr><th style="text-align:center">IP</th><th style="text-align:center">节点</th></tr></thead><tbody><tr><td style="text-align:center">192.168.7.11</td><td style="text-align:center">master、etcd</td></tr><tr><td style="text-align:center">192.168.7.12</td><td style="text-align:center">master、etcd</td></tr><tr><td style="text-align:center">192.168.7.13</td><td style="text-align:center">master、etcd</td></tr><tr><td style="text-align:center">192.168.7.14</td><td style="text-align:center">node</td></tr><tr><td style="text-align:center">192.168.7.15</td><td style="text-align:center">node</td></tr></tbody></table><h3 id="创建-TLS证书和秘钥"><a href="#创建-TLS证书和秘钥" class="headerlink" title="创建 TLS证书和秘钥"></a><font color="red">创建 TLS证书和秘钥</font></h3><h4 id="证书说明"><a href="#证书说明" class="headerlink" title="证书说明"></a>证书说明</h4><table><thead><tr><th style="text-align:center">证书名称</th><th style="text-align:center">配置文件</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center">etcd-root-ca.pem</td><td style="text-align:center">etcd-root-ca-csr.json</td><td style="text-align:center">etcd 根 CA 证书</td></tr><tr><td style="text-align:center">etcd.pem</td><td style="text-align:center">etcd-gencert.json、etcd-csr.json</td><td style="text-align:center">etcd 集群证书</td></tr><tr><td style="text-align:center">k8s-root-ca.pem</td><td style="text-align:center">k8s-root-ca-csr.json</td><td style="text-align:center">k8s 根 CA 证书</td></tr><tr><td style="text-align:center">kube-proxy.pem</td><td style="text-align:center">k8s-gencert.json、kube-proxy-csr.json</td><td style="text-align:center">kube-proxy 使用的证书</td></tr><tr><td style="text-align:center">admin.pem</td><td style="text-align:center">k8s-gencert.json、admin-csr.json</td><td style="text-align:center">kubectl 使用的证书</td></tr><tr><td style="text-align:center">kubernetes.pem</td><td style="text-align:center">k8s-gencert.json、kubernetes-csr.json</td><td style="text-align:center">kube-apiserver 使用的证书</td></tr></tbody></table><h4 id="安装CFSSL-192-168-7-11"><a href="#安装CFSSL-192-168-7-11" class="headerlink" title="安装CFSSL (192.168.7.11)"></a>安装<code>CFSSL</code> (192.168.7.11)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">mkdir -p ~/download</div><div class="line">cd ~/download</div><div class="line"># 下载 go1.8.3</div><div class="line">wget https://golang.org/dl/go1.8.3.linux-amd64.tar.gz</div><div class="line"># 解压压缩包</div><div class="line">tar -C /usr/local -xzf go1.8.3.linux-amd64.tar.gz</div><div class="line"># 添加环境变量</div><div class="line">vim /etc/profile</div><div class="line">export GOROOT=/usr/local/go</div><div class="line">export PATH=$PATH:$GOROOT/bin</div><div class="line">source /etc/profile</div><div class="line"># 使用 go 命令安装 cfssl</div><div class="line">go get -u github.com/cloudflare/cfssl/cmd/...</div></pre></td></tr></table></figure><h4 id="生成etcd证书-192-168-7-11"><a href="#生成etcd证书-192-168-7-11" class="headerlink" title="生成etcd证书 (192.168.7.11)"></a>生成<code>etcd</code>证书 (192.168.7.11)</h4><ul><li>etcd 证书配置文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p ~/document/ssl</div><div class="line">cd ~/document/ssl</div></pre></td></tr></table></figure><p><code>vim etcd-root-ca-csr.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;key&quot;: &#123;</div><div class="line">    &quot;algo&quot;: &quot;rsa&quot;,</div><div class="line">    &quot;size&quot;: 4096</div><div class="line">  &#125;,</div><div class="line">  &quot;names&quot;: [</div><div class="line">    &#123;</div><div class="line">      &quot;O&quot;: &quot;etcd&quot;,</div><div class="line">      &quot;OU&quot;: &quot;etcd Security&quot;,</div><div class="line">      &quot;L&quot;: &quot;Beijing&quot;,</div><div class="line">      &quot;ST&quot;: &quot;Beijing&quot;,</div><div class="line">      &quot;C&quot;: &quot;CN&quot;</div><div class="line">    &#125;</div><div class="line">  ],</div><div class="line">  &quot;CN&quot;: &quot;etcd-root-ca&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>vim etcd-gencert.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;signing&quot;: &#123;</div><div class="line">    &quot;default&quot;: &#123;</div><div class="line">        &quot;usages&quot;: [</div><div class="line">          &quot;signing&quot;,</div><div class="line">          &quot;key encipherment&quot;,</div><div class="line">          &quot;server auth&quot;,</div><div class="line">          &quot;client auth&quot;</div><div class="line">        ],</div><div class="line">        &quot;expiry&quot;: &quot;87600h&quot;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>vim etcd-csr.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;key&quot;: &#123;</div><div class="line">    &quot;algo&quot;: &quot;rsa&quot;,</div><div class="line">    &quot;size&quot;: 4096</div><div class="line">  &#125;,</div><div class="line">  &quot;names&quot;: [</div><div class="line">    &#123;</div><div class="line">      &quot;O&quot;: &quot;etcd&quot;,</div><div class="line">      &quot;OU&quot;: &quot;etcd Security&quot;,</div><div class="line">      &quot;L&quot;: &quot;Beijing&quot;,</div><div class="line">      &quot;ST&quot;: &quot;Beijing&quot;,</div><div class="line">      &quot;C&quot;: &quot;CN&quot;</div><div class="line">    &#125;</div><div class="line">  ],</div><div class="line">  &quot;CN&quot;: &quot;etcd&quot;,</div><div class="line">  &quot;hosts&quot;: [</div><div class="line">    &quot;127.0.0.1&quot;,</div><div class="line">    &quot;localhost&quot;,</div><div class="line">    &quot;192.168.1.11&quot;,</div><div class="line">    &quot;192.168.1.12&quot;,</div><div class="line">    &quot;192.168.1.13&quot;,</div><div class="line">    &quot;192.168.1.14&quot;,</div><div class="line">    &quot;192.168.1.15&quot;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><font color="blue">“CN”：Common Name，kube-apiserver 从证书中提取该字段作为请求的用户名 (User Name)；浏览器使用该字段验证网站是否合法；<br><br>“O”：Organization，kube-apiserver 从证书中提取该字段作为请求用户所属的组 (Group)</font><ul><li>生成 etcd 证书</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cfssl gencert --initca=true etcd-root-ca-csr.json | cfssljson --bare etcd-root-ca</div><div class="line">cfssl gencert --ca etcd-root-ca.pem --ca-key etcd-root-ca-key.pem --config etcd-gencert.json etcd-csr.json | cfssljson --bare etcd</div></pre></td></tr></table></figure><p><img src="/images/etcd.png" alt="etcd 证书" title="etcd 证书"></p><h4 id="生成-kubernetes-证书-192-168-7-11"><a href="#生成-kubernetes-证书-192-168-7-11" class="headerlink" title="生成 kubernetes 证书 (192.168.7.11)"></a>生成 kubernetes 证书 (192.168.7.11)</h4><ul><li>kubernetes 证书配置文件</li></ul><p><code>vim k8s-root-ca-csr.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;CN&quot;: &quot;kubernetes&quot;,</div><div class="line">  &quot;key&quot;: &#123;</div><div class="line">    &quot;algo&quot;: &quot;rsa&quot;,</div><div class="line">    &quot;size&quot;: 4096</div><div class="line">  &#125;,</div><div class="line">  &quot;names&quot;: [</div><div class="line">    &#123;</div><div class="line">      &quot;C&quot;: &quot;CN&quot;,</div><div class="line">      &quot;ST&quot;: &quot;BeiJing&quot;,</div><div class="line">      &quot;L&quot;: &quot;BeiJing&quot;,</div><div class="line">      &quot;O&quot;: &quot;k8s&quot;,</div><div class="line">      &quot;OU&quot;: &quot;System&quot;</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>vim k8s-gencert.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;signing&quot;: &#123;</div><div class="line">    &quot;default&quot;: &#123;</div><div class="line">      &quot;expiry&quot;: &quot;87600h&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;profiles&quot;: &#123;</div><div class="line">      &quot;kubernetes&quot;: &#123;</div><div class="line">        &quot;usages&quot;: [</div><div class="line">            &quot;signing&quot;,</div><div class="line">            &quot;key encipherment&quot;,</div><div class="line">            &quot;server auth&quot;,</div><div class="line">            &quot;client auth&quot;</div><div class="line">        ],</div><div class="line">        &quot;expiry&quot;: &quot;87600h&quot;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>vim kubernetes-csr.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;CN&quot;: &quot;kubernetes&quot;,</div><div class="line">    &quot;hosts&quot;: [</div><div class="line">        &quot;127.0.0.1&quot;,</div><div class="line">        &quot;10.254.0.1&quot;,</div><div class="line">        &quot;192.168.7.11&quot;,</div><div class="line">        &quot;192.168.7.12&quot;,</div><div class="line">        &quot;192.168.7.13&quot;,</div><div class="line">        &quot;192.168.7.14&quot;,</div><div class="line">        &quot;192.168.7.15&quot;,</div><div class="line">        &quot;localhost&quot;,</div><div class="line">        &quot;kubernetes&quot;,</div><div class="line">        &quot;kubernetes.default&quot;,</div><div class="line">        &quot;kubernetes.default.svc&quot;,</div><div class="line">        &quot;kubernetes.default.svc.cluster&quot;,</div><div class="line">        &quot;kubernetes.default.svc.cluster.local&quot;</div><div class="line">    ],</div><div class="line">    &quot;key&quot;: &#123;</div><div class="line">        &quot;algo&quot;: &quot;rsa&quot;,</div><div class="line">        &quot;size&quot;: 2048</div><div class="line">    &#125;,</div><div class="line">    &quot;names&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;C&quot;: &quot;CN&quot;,</div><div class="line">            &quot;ST&quot;: &quot;BeiJing&quot;,</div><div class="line">            &quot;L&quot;: &quot;BeiJing&quot;,</div><div class="line">            &quot;O&quot;: &quot;k8s&quot;,</div><div class="line">            &quot;OU&quot;: &quot;System&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>vim kube-proxy-csr.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;CN&quot;: &quot;system:kube-proxy&quot;,</div><div class="line">  &quot;hosts&quot;: [],</div><div class="line">  &quot;key&quot;: &#123;</div><div class="line">    &quot;algo&quot;: &quot;rsa&quot;,</div><div class="line">    &quot;size&quot;: 2048</div><div class="line">  &#125;,</div><div class="line">  &quot;names&quot;: [</div><div class="line">    &#123;</div><div class="line">      &quot;C&quot;: &quot;CN&quot;,</div><div class="line">      &quot;ST&quot;: &quot;BeiJing&quot;,</div><div class="line">      &quot;L&quot;: &quot;BeiJing&quot;,</div><div class="line">      &quot;O&quot;: &quot;k8s&quot;,</div><div class="line">      &quot;OU&quot;: &quot;System&quot;</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>vim admin-csr.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;CN&quot;: &quot;admin&quot;,</div><div class="line">  &quot;hosts&quot;: [],</div><div class="line">  &quot;key&quot;: &#123;</div><div class="line">    &quot;algo&quot;: &quot;rsa&quot;,</div><div class="line">    &quot;size&quot;: 2048</div><div class="line">  &#125;,</div><div class="line">  &quot;names&quot;: [</div><div class="line">    &#123;</div><div class="line">      &quot;C&quot;: &quot;CN&quot;,</div><div class="line">      &quot;ST&quot;: &quot;BeiJing&quot;,</div><div class="line">      &quot;L&quot;: &quot;BeiJing&quot;,</div><div class="line">      &quot;O&quot;: &quot;system:masters&quot;,</div><div class="line">      &quot;OU&quot;: &quot;System&quot;</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>生成 kubernetes 证书</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cfssl gencert --initca=true k8s-root-ca-csr.json | cfssljson --bare k8s-root-ca</div><div class="line"></div><div class="line">for targetName in kubernetes admin kube-proxy; do</div><div class="line">    cfssl gencert --ca k8s-root-ca.pem --ca-key k8s-root-ca-key.pem --config k8s-gencert.json --profile kubernetes $targetName-csr.json | cfssljson --bare $targetName</div><div class="line">done</div></pre></td></tr></table></figure><p><img src="/images/kube.png" alt="kubernetes 证书" title="kubernetes 证书"></p><ul><li>分发所需证书到各个节点目录 /etc/kubernetes/ssl 下面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">for IP in `seq 1 5`;do</div><div class="line"> ssh root@192.168.1.1$IP mkdir -p /etc/etcd/ssl</div><div class="line"> sudo scp ~/document/ssl/etcd*.pem root@192.168.1.1$IP:/etc/etcd/ssl</div><div class="line"> ssh root@192.168.1.1$IP chown -R etcd:etcd /etc/etcd/ssl</div><div class="line"> ssh root@192.168.1.1$IP chmod -R 755 /etc/etcd</div><div class="line"> ssh root@192.168.7.1$IP mkdir -p /etc/kubernetes/ssl</div><div class="line"> sudo scp ~/document/ssl/*.pem root@192.168.7.1$IP:/etc/kubernetes/ssl</div><div class="line"> ssh root@192.168.7.1$IP chown -R kube:kube /etc/kubernetes/ssl</div><div class="line">done</div></pre></td></tr></table></figure><h4 id="生成-token-及-kubeconfig-192-168-7-11"><a href="#生成-token-及-kubeconfig-192-168-7-11" class="headerlink" title="生成 token 及 kubeconfig (192.168.7.11)"></a>生成 token 及 kubeconfig (192.168.7.11)</h4><font color="blue">kubelet、kube-proxy 等 Node 机器上的进程与 Master 机器的 kube-apiserver 进程通信时需要认证和授权；<br><br>kubernetes 1.4 开始支持由 kube-apiserver 为客户端生成 TLS 证书的 TLS Bootstrapping 功能，这样就不需要为每个客户端生成证书了；该功能当前仅支持为 kubelet 生成证书</font><ul><li>生成 token</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd /etc/kubernetes</div><div class="line">export BOOTSTRAP_TOKEN=$(head -c 16 /dev/urandom | od -An -t x | tr -d &apos; &apos;)</div><div class="line">cat &gt; token.csv &lt;&lt;EOF</div><div class="line">$&#123;BOOTSTRAP_TOKEN&#125;,kubelet-bootstrap,10001,&quot;system:kubelet-bootstrap&quot;</div><div class="line">EOF</div></pre></td></tr></table></figure><p><img src="/images/token.png" alt="kubernetes 证书" title="kubernetes 证书"></p><font color="blue">BOOTSTRAP_TOKEN 将被写入到 kube-apiserver 使用的 token.csv 文件和 kubelet 使用的 bootstrap.kubeconfig 文件，如果后续重新生成了 BOOTSTRAP_TOKEN，则需要：<br><br>更新 token.csv 文件，分发到所有机器 (master 和 node）的 /etc/kubernetes/ 目录下，分发到node节点上非必需；<br>重新生成 bootstrap.kubeconfig 文件，分发到所有 node 机器的 /etc/kubernetes/ 目录下；<br>重启 kube-apiserver 和 kubelet 进程；<br>重新 approve kubelet 的 csr 请求</font><p>安装 kubernetes 并将 kube-apiserver,kube-controller-manager,kube-scheduler,kubectl 分发到 master; kubelet,kube-proxy 分发到 node; 同时分发所需证书到各个节点目录 /etc/kubernetes/ssl 下面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">cd ~/download</div><div class="line">wget https://github.com/kubernetes/kubernetes/releases/download/v1.7.4/kubernetes.tar.gz</div><div class="line">tar -zxvf kubernetes.tar.gz</div><div class="line">cd kubernetes</div><div class="line">./cluster/get-kube-binaries.sh</div><div class="line">cd kubernetes/server</div><div class="line">tar -zxvf kubernetes-server-linux-amd64.tar.gz</div><div class="line">cd kubernetes/server/bin</div><div class="line"></div><div class="line">for IP in `seq 1 3`;do</div><div class="line">sudo scp ./&#123;kube-apiserver,kube-controller-manager,kube-scheduler,kubectl&#125; root@192.168.7.1$IP:/usr/local/bin/</div><div class="line">ssh root@192.168.7.1$IP chmod a+x /usr/local/bin/kube*</div><div class="line">done</div><div class="line"></div><div class="line">for IP in `seq 4 5`;do</div><div class="line">    sudo scp ./&#123;kubelet,kube-proxy&#125; root@192.168.7.1$IP:/usr/local/bin</div><div class="line">    ssh root@192.168.7.1$IP chmod a+x /usr/local/bin/kube*</div><div class="line">done</div></pre></td></tr></table></figure><ul><li>创建 kubelet bootstrapping kubeconfig 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">cd /etc/kubernetes</div><div class="line">export KUBE_APISERVER=&quot;https://192.168.7.11:6443&quot;</div><div class="line"># 设置集群参数</div><div class="line">kubectl config set-cluster kubernetes \</div><div class="line">  --certificate-authority=/etc/kubernetes/ssl/k8s-root-ca.pem \</div><div class="line">  --embed-certs=true \</div><div class="line">  --server=$&#123;KUBE_APISERVER&#125; \</div><div class="line">  --kubeconfig=bootstrap.kubeconfig</div><div class="line"># 设置客户端认证参数</div><div class="line">kubectl config set-credentials kubelet-bootstrap \</div><div class="line">  --token=$&#123;BOOTSTRAP_TOKEN&#125; \</div><div class="line">  --kubeconfig=bootstrap.kubeconfig</div><div class="line"># 设置上下文参数</div><div class="line">kubectl config set-context default \</div><div class="line">  --cluster=kubernetes \</div><div class="line">  --user=kubelet-bootstrap \</div><div class="line">  --kubeconfig=bootstrap.kubeconfig</div><div class="line"># 设置默认上下文</div><div class="line">kubectl config use-context default --kubeconfig=bootstrap.kubeconfig</div></pre></td></tr></table></figure><font color="blue">–embed-certs 为 true 时表示将 certificate-authority 证书写入到生成的 bootstrap.kubeconfig 文件中；<br><br>设置客户端认证参数时没有指定秘钥和证书，后续由 kube-apiserver 自动生成</font><ul><li>创建 kube-proxy kubeconfig 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># 设置集群参数</div><div class="line">kubectl config set-cluster kubernetes \</div><div class="line">  --certificate-authority=/etc/kubernetes/ssl/k8s-root-ca.pem \</div><div class="line">  --embed-certs=true \</div><div class="line">  --server=$&#123;KUBE_APISERVER&#125; \</div><div class="line">  --kubeconfig=kube-proxy.kubeconfig</div><div class="line"># 设置客户端认证参数</div><div class="line">kubectl config set-credentials kube-proxy \</div><div class="line">  --client-certificate=/etc/kubernetes/ssl/kube-proxy.pem \</div><div class="line">  --client-key=/etc/kubernetes/ssl/kube-proxy-key.pem \</div><div class="line">  --embed-certs=true \</div><div class="line">  --kubeconfig=kube-proxy.kubeconfig</div><div class="line"># 设置上下文参数</div><div class="line">kubectl config set-context default \</div><div class="line">  --cluster=kubernetes \</div><div class="line">  --user=kube-proxy \</div><div class="line">  --kubeconfig=kube-proxy.kubeconfig</div><div class="line"># 设置默认上下文</div><div class="line">kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig</div></pre></td></tr></table></figure><font color="blue">设置集群参数和客户端认证参数时 –embed-certs 都为 true，这会将 certificate-authority、client-certificate 和 client-key 指向的证书文件内容写入到生成的 kube-proxy.kubeconfig 文件中；<br><br>kube-proxy.pem 证书中 CN 为 system:kube-proxy，kube-apiserver 预定义的 RoleBinding cluster-admin 将User system:kube-proxy 与 Role system:node-proxier 绑定，该 Role 授予了调用 kube-apiserver Proxy 相关 API 的权限</font><ul><li>分发 token、kubeconfig 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">for IP in `seq 2 5`;do</div><div class="line">    scp *.kubeconfig root@192.168.7.1$IP:/etc/kubernetes</div><div class="line">    scp token.csv root@192.168.7.1$IP:/etc/kubernetes</div><div class="line">done</div></pre></td></tr></table></figure><h3 id="部署-HA-etcd"><a href="#部署-HA-etcd" class="headerlink" title="部署 HA etcd"></a><font color="red">部署 HA etcd</font></h3><h4 id="安装-etcd"><a href="#安装-etcd" class="headerlink" title="安装 etcd"></a>安装 etcd</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo yum -y install etcd</div><div class="line">echo &apos;export ETCDCTL_API=3&apos; &gt;&gt; /etc/profile</div><div class="line">source /etc/profile</div></pre></td></tr></table></figure><h4 id="修改配置-vim-etc-etcd-etc-conf"><a href="#修改配置-vim-etc-etcd-etc-conf" class="headerlink" title="修改配置 vim /etc/etcd/etc.conf"></a>修改配置 <code>vim /etc/etcd/etc.conf</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"># [member]</div><div class="line">ETCD_NAME=etcd1</div><div class="line">ETCD_DATA_DIR=&quot;/var/lib/etcd/etcd1.etcd&quot;</div><div class="line">ETCD_WAL_DIR=&quot;/var/lib/etcd/wal&quot;</div><div class="line">ETCD_SNAPSHOT_COUNT=&quot;100&quot;</div><div class="line">ETCD_HEARTBEAT_INTERVAL=&quot;100&quot;</div><div class="line">ETCD_ELECTION_TIMEOUT=&quot;1000&quot;</div><div class="line">ETCD_LISTEN_PEER_URLS=&quot;https://192.168.7.11:2380&quot;</div><div class="line">ETCD_LISTEN_CLIENT_URLS=&quot;https://192.168.7.11:2379,http://127.0.0.1:2379&quot;</div><div class="line">ETCD_MAX_SNAPSHOTS=&quot;5&quot;</div><div class="line">ETCD_MAX_WALS=&quot;5&quot;</div><div class="line">#ETCD_CORS=&quot;&quot;</div><div class="line">#</div><div class="line">#[cluster]</div><div class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;https://192.168.7.11:2380&quot;</div><div class="line"># if you use different ETCD_NAME (e.g. test), set ETCD_INITIAL_CLUSTER value for this name, i.e. &quot;test=http://...&quot;</div><div class="line">ETCD_INITIAL_CLUSTER=&quot;etcd1=https://192.168.7.11:2380,etcd2=https://192.168.7.12:2380,etcd3=https://192.168.7.13:2380&quot;</div><div class="line">ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;</div><div class="line">ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster&quot;</div><div class="line">ETCD_ADVERTISE_CLIENT_URLS=&quot;https://192.168.7.11:2379&quot;</div><div class="line">#ETCD_DISCOVERY=&quot;&quot;</div><div class="line">#ETCD_DISCOVERY_SRV=&quot;&quot;</div><div class="line">#ETCD_DISCOVERY_FALLBACK=&quot;proxy&quot;</div><div class="line">#ETCD_DISCOVERY_PROXY=&quot;&quot;</div><div class="line">#ETCD_STRICT_RECONFIG_CHECK=&quot;false&quot;</div><div class="line">#ETCD_AUTO_COMPACTION_RETENTION=&quot;0&quot;</div><div class="line">#</div><div class="line">#[proxy]</div><div class="line">#ETCD_PROXY=&quot;off&quot;</div><div class="line">#ETCD_PROXY_FAILURE_WAIT=&quot;5000&quot;</div><div class="line">#ETCD_PROXY_REFRESH_INTERVAL=&quot;30000&quot;</div><div class="line">#ETCD_PROXY_DIAL_TIMEOUT=&quot;1000&quot;</div><div class="line">#ETCD_PROXY_WRITE_TIMEOUT=&quot;5000&quot;</div><div class="line">#ETCD_PROXY_READ_TIMEOUT=&quot;0&quot;</div><div class="line">#</div><div class="line">#[security]</div><div class="line">ETCD_CERT_FILE=&quot;/etc/etcd/ssl/etcd.pem&quot;</div><div class="line">ETCD_KEY_FILE=&quot;/etc/etcd/ssl/etcd-key.pem&quot;</div><div class="line">ETCD_CLIENT_CERT_AUTH=&quot;true&quot;</div><div class="line">ETCD_TRUSTED_CA_FILE=&quot;/etc/etcd/ssl/etcd-root-ca.pem&quot;</div><div class="line">ETCD_AUTO_TLS=&quot;true&quot;</div><div class="line">ETCD_PEER_CERT_FILE=&quot;/etc/etcd/ssl/etcd.pem&quot;</div><div class="line">ETCD_PEER_KEY_FILE=&quot;/etc/etcd/ssl/etcd-key.pem&quot;</div><div class="line">ETCD_PEER_CLIENT_CERT_AUTH=&quot;true&quot;</div><div class="line">ETCD_PEER_TRUSTED_CA_FILE=&quot;/etc/etcd/ssl/etcd-root-ca.pem&quot;</div><div class="line">ETCD_PEER_AUTO_TLS=&quot;true&quot;</div><div class="line">#</div><div class="line">#[logging]</div><div class="line">#ETCD_DEBUG=&quot;false&quot;</div><div class="line"># examples for -log-package-levels etcdserver=WARNING,security=DEBUG</div><div class="line">#ETCD_LOG_PACKAGE_LEVELS=&quot;&quot;</div></pre></td></tr></table></figure><h4 id="启动及验证"><a href="#启动及验证" class="headerlink" title="启动及验证"></a>启动及验证</h4><ul><li>配置修改后在每个节点进行启动即可，注意，Etcd 各个节点间必须保证时钟同步，否则会造成启动失败等错误</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">yum -y install ntp</div><div class="line">systemctl start ntpd</div><div class="line">systemctl enable ntpd</div><div class="line">hwclock --systohc</div><div class="line">systemctl daemon-reload</div><div class="line">systemctl start etcd</div><div class="line">systemctl enable etcd</div></pre></td></tr></table></figure><ul><li>验证 etcd 集群节点状态</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export ETCDCTL_API=3</div><div class="line">etcdctl --cacert=/etc/etcd/ssl/etcd-root-ca.pem --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem --endpoints=https://192.168.7.11:2379,https://192.168.7.12:2379,https://192.168.7.13:2379 endpoint health</div></pre></td></tr></table></figure><h3 id="部署-HA-master"><a href="#部署-HA-master" class="headerlink" title="部署 HA master"></a><font color="red">部署 HA master</font></h3><p>由于 api server 会写入一些日志，所以先创建好相关目录，并做好授权，防止因为权限错误导致 api server 无法启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">for IP in `seq 1 3`;do</div><div class="line">    ssh root@192.168.1.1$IP mkdir /var/log/kube-audit  </div><div class="line">    ssh root@192.168.1.1$IP chown -R kube:kube /var/log/kube-audit</div><div class="line">    ssh root@192.168.1.1$IP chmod -R 755 /var/log/kube-audit</div><div class="line">done</div></pre></td></tr></table></figure><h4 id="创建-kube-apiserver的service配置文件"><a href="#创建-kube-apiserver的service配置文件" class="headerlink" title="创建 kube-apiserver的service配置文件"></a>创建 kube-apiserver的service配置文件</h4><p><code>vim /usr/lib/systemd/system/kube-apiserver.service</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=Kubernetes API Service</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line">After=network.target</div><div class="line">After=etcd.service</div><div class="line"></div><div class="line">[Service]</div><div class="line">EnvironmentFile=-/etc/kubernetes/config</div><div class="line">EnvironmentFile=-/etc/kubernetes/apiserver</div><div class="line">ExecStart=/usr/local/bin/kube-apiserver \</div><div class="line">        $KUBE_LOGTOSTDERR \</div><div class="line">        $KUBE_LOG_LEVEL \</div><div class="line">        $KUBE_ETCD_SERVERS \</div><div class="line">        $KUBE_API_ADDRESS \</div><div class="line">        $KUBE_API_PORT \</div><div class="line">        $KUBELET_PORT \</div><div class="line">        $KUBE_ALLOW_PRIV \</div><div class="line">        $KUBE_SERVICE_ADDRESSES \</div><div class="line">        $KUBE_ADMISSION_CONTROL \</div><div class="line">        $KUBE_API_ARGS</div><div class="line">Restart=on-failure</div><div class="line">Type=notify</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure><h4 id="创建-kube-controller-manager的serivce配置文件"><a href="#创建-kube-controller-manager的serivce配置文件" class="headerlink" title="创建 kube-controller-manager的serivce配置文件"></a>创建 kube-controller-manager的serivce配置文件</h4><p><code>vim /usr/lib/systemd/system/kube-controller-manager.service</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Description=Kubernetes Controller Manager</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line"></div><div class="line">[Service]</div><div class="line">EnvironmentFile=-/etc/kubernetes/config</div><div class="line">EnvironmentFile=-/etc/kubernetes/controller-manager</div><div class="line">ExecStart=/usr/local/bin/kube-controller-manager \</div><div class="line">        $KUBE_LOGTOSTDERR \</div><div class="line">        $KUBE_LOG_LEVEL \</div><div class="line">        $KUBE_MASTER \</div><div class="line">        $KUBE_CONTROLLER_MANAGER_ARGS</div><div class="line">Restart=on-failure</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure><h4 id="创建-kube-scheduler的serivce配置文件"><a href="#创建-kube-scheduler的serivce配置文件" class="headerlink" title="创建 kube-scheduler的serivce配置文件"></a>创建 kube-scheduler的serivce配置文件</h4><p><code>vim /usr/lib/systemd/system/kube-scheduler.service</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=Kubernetes Scheduler Plugin</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line"></div><div class="line">[Service]</div><div class="line">EnvironmentFile=-/etc/kubernetes/config</div><div class="line">EnvironmentFile=-/etc/kubernetes/scheduler</div><div class="line">ExecStart=/usr/local/bin/kube-scheduler \</div><div class="line">            $KUBE_LOGTOSTDERR \</div><div class="line">            $KUBE_LOG_LEVEL \</div><div class="line">            $KUBE_MASTER \</div><div class="line">            $KUBE_SCHEDULER_ARGS</div><div class="line">Restart=on-failure</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure><h4 id="修改-master-配置"><a href="#修改-master-配置" class="headerlink" title="修改 master 配置"></a>修改 master 配置</h4><p>master 需要编辑 config、apiserver、controller-manager、scheduler这四个文件，具体修改如下</p><ul><li>config 通用配置<code>vim /etc/kubernetes/config</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line"># kubernetes system config</div><div class="line">#</div><div class="line"># The following values are used to configure various aspects of all</div><div class="line"># kubernetes services, including</div><div class="line">#</div><div class="line">#   kube-apiserver.service</div><div class="line">#   kube-controller-manager.service</div><div class="line">#   kube-scheduler.service</div><div class="line">#   kubelet.service</div><div class="line">#   kube-proxy.service</div><div class="line"># logging to stderr means we get it in the systemd journal</div><div class="line">KUBE_LOGTOSTDERR=&quot;--logtostderr=true&quot;</div><div class="line"></div><div class="line"># journal message level, 0 is debug</div><div class="line">KUBE_LOG_LEVEL=&quot;--v=2&quot;</div><div class="line"></div><div class="line"># Should this cluster be allowed to run privileged docker containers</div><div class="line">KUBE_ALLOW_PRIV=&quot;--allow-privileged=true&quot;</div><div class="line"></div><div class="line"># How the controller-manager, scheduler, and proxy find the apiserver</div><div class="line">KUBE_MASTER=&quot;--master=http://127.0.0.1:8080&quot;</div></pre></td></tr></table></figure><ul><li>apiserver 配置(其他节点只有 IP 不同) <code>vim /etc/kubernetes/apiserver</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line"># kubernetes system config</div><div class="line">#</div><div class="line"># The following values are used to configure the kube-apiserver</div><div class="line">#</div><div class="line"></div><div class="line"># The address on the local server to listen to.</div><div class="line">KUBE_API_ADDRESS=&quot;--advertise-address=192.168.7.11 --insecure-bind-address=127.0.0.1 --bind-address=192.168.7.11&quot;</div><div class="line"></div><div class="line"># The port on the local server to listen on.</div><div class="line">KUBE_API_PORT=&quot;--insecure-port=8080 --secure-port=6443&quot;</div><div class="line"></div><div class="line"># Port minions listen on</div><div class="line"># KUBELET_PORT=&quot;--kubelet-port=10250&quot;</div><div class="line"></div><div class="line"># Comma separated list of nodes in the etcd cluster</div><div class="line">KUBE_ETCD_SERVERS=&quot;--etcd-servers=https://192.168.7.11:2379,https://192.168.7.12:2379,https://192.168.7.13:2379&quot;</div><div class="line"></div><div class="line"># Address range to use for services</div><div class="line">KUBE_SERVICE_ADDRESSES=&quot;--service-cluster-ip-range=10.254.0.0/16&quot;</div><div class="line"></div><div class="line"># default admission control policies</div><div class="line">KUBE_ADMISSION_CONTROL=&quot;--admission-control=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota&quot;</div><div class="line"></div><div class="line"># Add your own!</div><div class="line">KUBE_API_ARGS=&quot;--authorization-mode=RBAC \</div><div class="line">               --runtime-config=rbac.authorization.k8s.io/v1beta1 \</div><div class="line">               --anonymous-auth=false \</div><div class="line">               --kubelet-https=true \</div><div class="line">               --experimental-bootstrap-token-auth \</div><div class="line">               --token-auth-file=/etc/kubernetes/token.csv \</div><div class="line">               --service-node-port-range=30000-50000 \</div><div class="line">               --tls-cert-file=/etc/kubernetes/ssl/kubernetes.pem \</div><div class="line">               --tls-private-key-file=/etc/kubernetes/ssl/kubernetes-key.pem \</div><div class="line">               --client-ca-file=/etc/kubernetes/ssl/k8s-root-ca.pem \</div><div class="line">               --service-account-key-file=/etc/kubernetes/ssl/k8s-root-ca.pem \</div><div class="line">               --etcd-quorum-read=true \</div><div class="line">               --storage-backend=etcd3 \</div><div class="line">               --etcd-cafile=/etc/etcd/ssl/etcd-root-ca.pem \</div><div class="line">               --etcd-certfile=/etc/etcd/ssl/etcd.pem \</div><div class="line">               --etcd-keyfile=/etc/etcd/ssl/etcd-key.pem \</div><div class="line">               --enable-swagger-ui=true \</div><div class="line">               --apiserver-count=3 \</div><div class="line">               --audit-log-maxage=30 \</div><div class="line">               --audit-log-maxbackup=3 \</div><div class="line">               --audit-log-maxsize=100 \</div><div class="line">               --audit-log-path=/var/log/kube-audit/audit.log \</div><div class="line">               --event-ttl=1h&quot;</div></pre></td></tr></table></figure><ul><li>controller-manager 配置 <code>vim /etc/kubernetes/controller-manager</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line"># The following values are used to configure the kubernetes controller-manager</div><div class="line"></div><div class="line"># defaults from config and apiserver should be adequate</div><div class="line"></div><div class="line"># Add your own!</div><div class="line">KUBE_CONTROLLER_MANAGER_ARGS=&quot;--address=127.0.0.1 \</div><div class="line">                              --service-cluster-ip-range=10.254.0.0/16 \</div><div class="line">                              --cluster-name=kubernetes \</div><div class="line">                              --cluster-signing-cert-file=/etc/kubernetes/ssl/k8s-root-ca.pem \</div><div class="line">                              --cluster-signing-key-file=/etc/kubernetes/ssl/k8s-root-ca-key.pem \</div><div class="line">                              --service-account-private-key-file=/etc/kubernetes/ssl/k8s-root-ca-key.pem \</div><div class="line">                              --root-ca-file=/etc/kubernetes/ssl/k8s-root-ca.pem \</div><div class="line">                              --leader-elect=true \</div><div class="line">                              --node-monitor-grace-period=40s \</div><div class="line">                              --node-monitor-period=5s \</div><div class="line">                              --pod-eviction-timeout=5m0s&quot;</div></pre></td></tr></table></figure><ul><li>scheduler 配置 <code>vim /etc/kubernetes/scheduler</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line"># kubernetes scheduler config</div><div class="line"></div><div class="line"># default config should be adequate</div><div class="line"></div><div class="line"># Add your own!</div><div class="line">KUBE_SCHEDULER_ARGS=&quot;--leader-elect=true --address=127.0.0.1&quot;</div></pre></td></tr></table></figure><p>其他 master 节点配置相同，只需要修改以下 IP 地址即可</p><h4 id="启动各-master-节点相关服务"><a href="#启动各-master-节点相关服务" class="headerlink" title="启动各 master 节点相关服务"></a>启动各 master 节点相关服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div><div class="line">systemctl start kube-apiserver</div><div class="line">systemctl start kube-controller-manager</div><div class="line">systemctl start kube-scheduler</div><div class="line">systemctl enable kube-apiserver</div><div class="line">systemctl enable kube-controller-manager</div><div class="line">systemctl enable kube-scheduler</div></pre></td></tr></table></figure><h4 id="验证-master-节点功能"><a href="#验证-master-节点功能" class="headerlink" title="验证 master 节点功能"></a>验证 master 节点功能</h4><p><img src="/images/kube-cs.png" alt="验证 master 节点功能" title="验证 master 节点功能"></p><h3 id="部署-node"><a href="#部署-node" class="headerlink" title="部署 node"></a><font color="red">部署 node</font></h3><h4 id="创建-ClusterRoleBinding"><a href="#创建-ClusterRoleBinding" class="headerlink" title="创建 ClusterRoleBinding"></a>创建 ClusterRoleBinding</h4><p>kubelet 启动时向 kube-apiserver 发送 TLS bootstrapping 请求，需要先将 bootstrap token 文件中的 kubelet-bootstrap 用户赋予 system:node-bootstrapper cluster 角色(role)， 然后 kubelet 才能有权限创建认证请求(certificate signing requests)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 在任意 master 执行即可</div><div class="line">kubectl create clusterrolebinding kubelet-bootstrap \</div><div class="line">  --clusterrole=system:node-bootstrapper \</div><div class="line">  --user=kubelet-bootstrap</div></pre></td></tr></table></figure><h4 id="创建-kubelet-的service配置文件"><a href="#创建-kubelet-的service配置文件" class="headerlink" title="创建 kubelet 的service配置文件"></a>创建 kubelet 的service配置文件</h4><p><code>/usr/lib/systemd/system/kubelet.service</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=Kubernetes Kubelet Server</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line">After=docker.service</div><div class="line">Requires=docker.service</div><div class="line"></div><div class="line">[Service]</div><div class="line">WorkingDirectory=/var/lib/kubelet</div><div class="line">EnvironmentFile=-/etc/kubernetes/config</div><div class="line">EnvironmentFile=-/etc/kubernetes/kubelet</div><div class="line">ExecStart=/usr/local/bin/kubelet \</div><div class="line">            $KUBE_LOGTOSTDERR \</div><div class="line">            $KUBE_LOG_LEVEL \</div><div class="line">            $KUBELET_API_SERVER \</div><div class="line">            $KUBELET_ADDRESS \</div><div class="line">            $KUBELET_PORT \</div><div class="line">            $KUBELET_HOSTNAME \</div><div class="line">            $KUBE_ALLOW_PRIV \</div><div class="line">            $KUBELET_POD_INFRA_CONTAINER \</div><div class="line">            $KUBELET_ARGS</div><div class="line">Restart=on-failure</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure><h4 id="创建-kube-proxy-的service配置文件"><a href="#创建-kube-proxy-的service配置文件" class="headerlink" title="创建 kube-proxy 的service配置文件"></a>创建 kube-proxy 的service配置文件</h4><p><code>/usr/lib/systemd/system/kube-proxy.service</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=Kubernetes Kube-Proxy Server</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line">After=network.target</div><div class="line"></div><div class="line">[Service]</div><div class="line">EnvironmentFile=-/etc/kubernetes/config</div><div class="line">EnvironmentFile=-/etc/kubernetes/proxy</div><div class="line">ExecStart=/usr/local/bin/kube-proxy \</div><div class="line">        $KUBE_LOGTOSTDERR \</div><div class="line">        $KUBE_LOG_LEVEL \</div><div class="line">        $KUBE_MASTER \</div><div class="line">        $KUBE_PROXY_ARGS</div><div class="line">Restart=on-failure</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure><ul><li>config 通用配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line"># kubernetes system config</div><div class="line">#</div><div class="line"># The following values are used to configure various aspects of all</div><div class="line"># kubernetes services, including</div><div class="line">#</div><div class="line">#   kube-apiserver.service</div><div class="line">#   kube-controller-manager.service</div><div class="line">#   kube-scheduler.service</div><div class="line">#   kubelet.service</div><div class="line">#   kube-proxy.service</div><div class="line"># logging to stderr means we get it in the systemd journal</div><div class="line">KUBE_LOGTOSTDERR=&quot;--logtostderr=true&quot;</div><div class="line"></div><div class="line"># journal message level, 0 is debug</div><div class="line">KUBE_LOG_LEVEL=&quot;--v=2&quot;</div><div class="line"></div><div class="line"># Should this cluster be allowed to run privileged docker containers</div><div class="line">KUBE_ALLOW_PRIV=&quot;--allow-privileged=true&quot;</div><div class="line"></div><div class="line"># How the controller-manager, scheduler, and proxy find the apiserver</div><div class="line"># KUBE_MASTER=&quot;--master=http://127.0.0.1:8080&quot;</div></pre></td></tr></table></figure><ul><li>kubelet 配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line"># kubernetes kubelet (minion) config</div><div class="line"></div><div class="line"># The address for the info server to serve on (set to 0.0.0.0 or &quot;&quot; for all interfaces)</div><div class="line">KUBELET_ADDRESS=&quot;--address=192.168.7.14&quot;</div><div class="line"></div><div class="line"># The port for the info server to serve on</div><div class="line"># KUBELET_PORT=&quot;--port=10250&quot;</div><div class="line"></div><div class="line"># You may leave this blank to use the actual hostname</div><div class="line">KUBELET_HOSTNAME=&quot;--hostname-override=docker4.node&quot;</div><div class="line"></div><div class="line"># location of the api-server</div><div class="line">#KUBELET_API_SERVER=&quot;--api-servers=http://192.168.7.11:8080&quot;</div><div class="line"></div><div class="line"># Add your own!</div><div class="line">KUBELET_ARGS=&quot;--cgroup-driver=cgroupfs \</div><div class="line">              --cluster-dns=10.254.0.2 \</div><div class="line">              --resolv-conf=/etc/resolv.conf \</div><div class="line">              --experimental-bootstrap-kubeconfig=/etc/kubernetes/bootstrap.kubeconfig \</div><div class="line">              --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \</div><div class="line">              --require-kubeconfig \</div><div class="line">              --cert-dir=/etc/kubernetes/ssl \</div><div class="line">              --cluster-domain=cluster.local \</div><div class="line">              --hairpin-mode promiscuous-bridge \</div><div class="line">              --serialize-image-pulls=false \</div><div class="line">              --pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google_containers/pause-amd64:3.0&quot;</div></pre></td></tr></table></figure><ul><li>proxy 配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line"># kubernetes proxy config</div><div class="line"></div><div class="line"># default config should be adequate</div><div class="line"></div><div class="line"># Add your own!</div><div class="line">KUBE_PROXY_ARGS=&quot;--bind-address=192.168.7.14 \</div><div class="line">                 --hostname-override=docker4.node \</div><div class="line">                 --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig \</div><div class="line">                 --cluster-cidr=10.254.0.0/16&quot;</div></pre></td></tr></table></figure><h4 id="创建-nginx-代理"><a href="#创建-nginx-代理" class="headerlink" title="创建 nginx 代理"></a>创建 nginx 代理</h4><p>根据上面描述的 master HA 架构，此时所有 node 应该连接本地的 nginx 代理，然后 nginx 来负载所有 api server；以下为 nginx 代理相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"># 创建配置目录</div><div class="line">mkdir -p /etc/nginx</div><div class="line"></div><div class="line"># 写入代理配置</div><div class="line">cat &lt;&lt; EOF &gt;&gt; /etc/nginx/nginx.conf</div><div class="line">error_log stderr notice;</div><div class="line"></div><div class="line">worker_processes auto;</div><div class="line">events &#123;</div><div class="line">  multi_accept on;</div><div class="line">  use epoll;</div><div class="line">  worker_connections 1024;</div><div class="line">&#125;</div><div class="line"></div><div class="line">stream &#123;</div><div class="line">    upstream kube_apiserver &#123;</div><div class="line">        least_conn;</div><div class="line">        server 192.168.7.11:6443;</div><div class="line">        server 192.168.7.12:6443;</div><div class="line">        server 192.168.7.13:6443;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen        0.0.0.0:6443;</div><div class="line">        proxy_pass    kube_apiserver;</div><div class="line">        proxy_timeout 10m;</div><div class="line">        proxy_connect_timeout 1s;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">EOF</div><div class="line"></div><div class="line"># 更新权限</div><div class="line">chmod +r /etc/nginx/nginx.conf</div></pre></td></tr></table></figure><p>为了保证 nginx 的可靠性，综合便捷性考虑，node 节点上的 nginx 使用 docker 启动，同时 使用 systemd 来守护， systemd 配置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">cat &lt;&lt; EOF &gt;&gt; /etc/systemd/system/nginx-proxy.service</div><div class="line">[Unit]</div><div class="line">Description=kubernetes apiserver docker wrapper</div><div class="line">Wants=docker.socket</div><div class="line">After=docker.service</div><div class="line"></div><div class="line">[Service]</div><div class="line">User=root</div><div class="line">PermissionsStartOnly=true</div><div class="line">ExecStart=/usr/bin/docker run -p 127.0.0.1:6443:6443 \\</div><div class="line">                              -v /etc/nginx:/etc/nginx \\</div><div class="line">                              --name nginx-proxy \\</div><div class="line">                              --net=host \\</div><div class="line">                              --restart=on-failure:5 \\</div><div class="line">                              --memory=512M \\</div><div class="line">                              nginx:1.13.3-alpine</div><div class="line">ExecStartPre=-/usr/bin/docker rm -f nginx-proxy</div><div class="line">ExecStop=/usr/bin/docker stop nginx-proxy</div><div class="line">Restart=always</div><div class="line">RestartSec=15s</div><div class="line">TimeoutStartSec=30s</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">EOF</div></pre></td></tr></table></figure><h4 id="启动-kubelet、nginx-proxy"><a href="#启动-kubelet、nginx-proxy" class="headerlink" title="启动 kubelet、nginx-proxy"></a>启动 kubelet、nginx-proxy</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div><div class="line">systemctl start kubelet</div><div class="line">systemctl enable kubelet</div><div class="line">systemctl start kube-proxy</div><div class="line">systemctl enable kube-proxy</div><div class="line">systemctl start nginx-proxy</div><div class="line">systemctl enable nginx-proxy</div></pre></td></tr></table></figure><h4 id="master-节点验证连通性"><a href="#master-节点验证连通性" class="headerlink" title="master 节点验证连通性"></a>master 节点验证连通性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">kubectl --server https://192.168.7.11:6443 --certificate-authority /etc/kubernetes/ssl/k8s-root-ca.pem --client-certificate /etc/kubernetes/ssl/admin.pem --client-key /etc/kubernetes/ssl/admin-key.pem get cs</div></pre></td></tr></table></figure><p><img src="/images/ktl.png" alt="验证 master 节点功能" title="验证 master 节点功能"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># 查看 csr</div><div class="line">➜  kubectl get csr</div><div class="line">NAME                                                   AGE  REQUESTOR           CONDITION</div><div class="line">node-csr-PhOGHB8BpFuNoYtnCGka4NTaxtDQDRjrctZtdaVsijY   2m   kubelet-bootstrap   Pending</div><div class="line"></div><div class="line"># 签发证书</div><div class="line">➜  kubectl certificate approve node-csr-PhOGHB8BpFuNoYtnCGka4NTaxtDQDRjrctZtdaVsijY</div><div class="line">certificatesigningrequest &quot;node-csr-PhOGHB8BpFuNoYtnCGka4NTaxtDQDRjrctZtdaVsijY&quot; approved</div><div class="line"></div><div class="line"># 查看 node</div><div class="line">➜  kubectl get node</div><div class="line">NAME           STATUS    AGE       VERSION</div><div class="line">docker4.node   Ready     20s       v1.7.4</div></pre></td></tr></table></figure><h3 id="安装-kubedns-插件"><a href="#安装-kubedns-插件" class="headerlink" title="安装 kubedns 插件"></a><font color="red">安装 kubedns 插件</font></h3><h3 id="安装-dashboard-插件"><a href="#安装-dashboard-插件" class="headerlink" title="安装 dashboard 插件"></a><font color="red">安装 dashboard 插件</font></h3><h3 id="安装-heapster-插件"><a href="#安装-heapster-插件" class="headerlink" title="安装 heapster 插件"></a><font color="red">安装 heapster 插件</font></h3><h3 id="安装-EFK-插件"><a href="#安装-EFK-插件" class="headerlink" title="安装 EFK 插件"></a><font color="red">安装 EFK 插件</font></h3><h3 id="部署-harbor-私有仓库"><a href="#部署-harbor-私有仓库" class="headerlink" title="部署 harbor 私有仓库"></a><font color="red">部署 harbor 私有仓库</font></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用virtualbox-vagrant安装centos7&quot;&gt;&lt;a href=&quot;#使用virtualbox-vagrant安装centos7&quot; class=&quot;headerlink&quot; title=&quot;使用virtualbox + vagrant安装centos7&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="devops" scheme="https://sunbjx.com/categories/devops/"/>
    
      <category term="kubernetes" scheme="https://sunbjx.com/categories/devops/kubernetes/"/>
    
    
  </entry>
  
  <entry>
    <title>悟透自己</title>
    <link href="https://sunbjx.com/2017/09/09/%E6%82%9F%E9%80%8F%E8%87%AA%E5%B7%B1/"/>
    <id>https://sunbjx.com/2017/09/09/悟透自己/</id>
    <published>2017-09-08T19:00:51.000Z</published>
    <updated>2017-09-08T19:14:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;&nbsp;&nbsp;&nbsp;&nbsp;人生在世,和“自己”相处最多, 但是往往悟不透“自己”.  </p><p>&emsp;&emsp;&nbsp;&nbsp;&nbsp;&nbsp;人生走上坡路时,往往把自己估计过高,似乎一切所求的东西都能唾手可得,甚至把运气和机遇也看作自己身价的一部分而喜不自胜.人在不得意时,又往往把自己估计过低,把困难和不利也看做自己的无能,以至于把安分守己,与世无争误认为有自知之明,而实际上往往被怯懦的面具窒息了自己鲜活的生命.</p><p>&emsp;&emsp;&nbsp;&nbsp;&nbsp;&nbsp;悟透自己,就是正确认识自己,也就是说要做一个冷静的现实主义者,既知道自己的优势,也知道自己的不足.我们可以憧憬人生,但期望值不能过高.因为在现实中,理想总是会打折扣的.可以迎接挑战.但是必须清楚自己努力的方向.也就是说,人一旦有了自知之明,也就没有什么克服不了的困难,没有什么过不去的难关.      </p><p>&emsp;&emsp;&nbsp;&nbsp;&nbsp;&nbsp;要悟透自己就要欣赏自己.无论你是一棵参天大树,还是一棵小草,无论你成为一座巍峨的高山,还是一快小小的石头,都是一种天然,都有自己存在的价值.只要你认真的欣赏自己,你就会拥有一个真正的自我.只有自我欣赏才会有信心,一旦拥有了信心也就会拥有了抵御一切逆境的动力.</p><p>&emsp;&emsp;&nbsp;&nbsp;&nbsp;&nbsp;要悟透自己,就要心疼自己.在气愤时心疼一下自己,找个僻静处散散心,宣泄宣泄,不要让那些无名之火伤身;忧郁时,要心疼一下自己,找三五好友,诉说诉说,让感情的阴天变晴;劳累时,你要心疼一下自己,为自己来一番问寒问暖,要明白人所拥有的不过是一个血肉之躯,经不住太多的风力霜剑;有病时,你要心疼一下自己,惟有对自己的心疼,才是战胜疾病的信心和力量.      </p><p>&emsp;&emsp;&nbsp;&nbsp;&nbsp;&nbsp;悟透了自己,才能把握住自己,你生活才会有滋有味!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp;&amp;emsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;人生在世,和“自己”相处最多, 但是往往悟不透“自己”.  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;人生走上坡路时,往往把自己估计过高,似乎一切所求的东西
      
    
    </summary>
    
      <category term="ESSAYS" scheme="https://sunbjx.com/categories/ESSAYS/"/>
    
    
  </entry>
  
  <entry>
    <title>JDK安装配置</title>
    <link href="https://sunbjx.com/2017/09/08/JDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>https://sunbjx.com/2017/09/08/JDK安装配置/</id>
    <published>2017-09-08T11:47:55.000Z</published>
    <updated>2017-09-08T16:52:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a><font color="red">ubuntu</font></h3><p>1、解压文件并修改文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tar zxvf jdk-7u21-linux-i586.tar.gz -C /usr/lib/</div></pre></td></tr></table></figure><p>进入到安装目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/lib/</div></pre></td></tr></table></figure><p>修改文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mv jdk1.7.0_21 java</div></pre></td></tr></table></figure><p>2、添加环境变量使用vim ~/.bashrc命令编辑</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/lib/java</div><div class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</div><div class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</div><div class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</div></pre></td></tr></table></figure><p>3、激活环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source ~/.bashrc</div></pre></td></tr></table></figure><h3 id="centos"><a href="#centos" class="headerlink" title="centos"></a><font color="red">centos</font></h3><p>1、查看JDK信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -qa | grep java</div></pre></td></tr></table></figure><p>2、卸载OpenJDK——在 步骤 1中 复制所有的 openjdk卸载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -e --nodeps java-1.7.0-openjdk-headless-1.7.0.71-2.5.3.1.el7_0.x86_64</div></pre></td></tr></table></figure><p>3、安装jdk</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tar -zxvf yourjdk.tar.gz -C /usr/lib</div></pre></td></tr></table></figure><p>4、配置JDK环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/lib/jdk1.8.0_92</div><div class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</div><div class="line">export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</div><div class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</div></pre></td></tr></table></figure><p>5、为了使编译生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure><p>6、查看path值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo $PATH</div></pre></td></tr></table></figure><h3 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a><font color="red">Mac</font></h3><p>官网下载dmg版本安装后配置环境如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim ~/.bash_profile</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;ubuntu&quot;&gt;&lt;a href=&quot;#ubuntu&quot; class=&quot;headerlink&quot; title=&quot;ubuntu&quot;&gt;&lt;/a&gt;&lt;font color=&quot;red&quot;&gt;ubuntu&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;1、解压文件并修改文件名&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
      <category term="JAVA" scheme="https://sunbjx.com/categories/JAVA/"/>
    
      <category term="config" scheme="https://sunbjx.com/categories/JAVA/config/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sunbjx.com/2017/09/07/hello-world/"/>
    <id>https://sunbjx.com/2017/09/07/hello-world/</id>
    <published>2017-09-07T07:28:33.000Z</published>
    <updated>2017-09-07T07:28:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
